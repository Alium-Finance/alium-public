[{"/Users/alexsharypin/Projects/alium/alium-public/src/index.tsx":"1","/Users/alexsharypin/Projects/alium/alium-public/src/i18n.ts":"2","/Users/alexsharypin/Projects/alium/alium-public/src/style/Global.ts":"3","/Users/alexsharypin/Projects/alium/alium-public/src/state/application/updater.ts":"4","/Users/alexsharypin/Projects/alium/alium-public/src/Providers.tsx":"5","/Users/alexsharypin/Projects/alium/alium-public/src/state/lists/updater.ts":"6","/Users/alexsharypin/Projects/alium/alium-public/src/pages/App.tsx":"7","/Users/alexsharypin/Projects/alium/alium-public/src/state/transactions/updater.tsx":"8","/Users/alexsharypin/Projects/alium/alium-public/src/state/multicall/updater.tsx":"9","/Users/alexsharypin/Projects/alium/alium-public/src/state/application/actions.ts":"10","/Users/alexsharypin/Projects/alium/alium-public/src/state/lists/actions.ts":"11","/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useDebounce.ts":"12","/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useIsWindowVisible.ts":"13","/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useFetchListCallback.ts":"14","/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useInterval.ts":"15","/Users/alexsharypin/Projects/alium/alium-public/src/utils/getLibrary.ts":"16","/Users/alexsharypin/Projects/alium/alium-public/src/hooks/LanguageContext.ts":"17","/Users/alexsharypin/Projects/alium/alium-public/src/hooks/TranslationsContext.ts":"18","/Users/alexsharypin/Projects/alium/alium-public/src/state/transactions/actions.ts":"19","/Users/alexsharypin/Projects/alium/alium-public/src/state/application/hooks.ts":"20","/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useContract.ts":"21","/Users/alexsharypin/Projects/alium/alium-public/src/utils/chunkArray.ts":"22","/Users/alexsharypin/Projects/alium/alium-public/src/utils/retry.ts":"23","/Users/alexsharypin/Projects/alium/alium-public/src/state/multicall/actions.ts":"24","/Users/alexsharypin/Projects/alium/alium-public/src/ThemeContext.tsx":"25","/Users/alexsharypin/Projects/alium/alium-public/src/constants/localisation/languageCodes.ts":"26","/Users/alexsharypin/Projects/alium/alium-public/src/state/index.ts":"27","/Users/alexsharypin/Projects/alium/alium-public/src/hooks/index.ts":"28","/Users/alexsharypin/Projects/alium/alium-public/src/constants/index.ts":"29","/Users/alexsharypin/Projects/alium/alium-public/src/utils/resolveENSContentHash.ts":"30","/Users/alexsharypin/Projects/alium/alium-public/src/utils/getTokenList.ts":"31","/Users/alexsharypin/Projects/alium/alium-public/src/constants/abis/migrator.ts":"32","/Users/alexsharypin/Projects/alium/alium-public/src/constants/abis/erc20.ts":"33","/Users/alexsharypin/Projects/alium/alium-public/src/components/Web3ReactManager/index.tsx":"34","/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/components/Header/index.tsx":"35","/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/index.tsx":"36","/Users/alexsharypin/Projects/alium/alium-public/src/components/Popups/index.tsx":"37","/Users/alexsharypin/Projects/alium/alium-public/src/state/user/reducer.ts":"38","/Users/alexsharypin/Projects/alium/alium-public/src/utils/uriToHttp.ts":"39","/Users/alexsharypin/Projects/alium/alium-public/src/utils/index.ts":"40","/Users/alexsharypin/Projects/alium/alium-public/src/connectors/index.ts":"41","/Users/alexsharypin/Projects/alium/alium-public/src/constants/v1/index.ts":"42","/Users/alexsharypin/Projects/alium/alium-public/src/constants/multicall/index.ts":"43","/Users/alexsharypin/Projects/alium/alium-public/src/constants/abis/nftPrivate.ts":"44","/Users/alexsharypin/Projects/alium/alium-public/src/constants/abis/vampire.ts":"45","/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/components/Header/SocialNetworks/SocialNetworks.tsx":"46","/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/constants/membersList.ts":"47","/Users/alexsharypin/Projects/alium/alium-public/src/components/Popups/PopupItem.tsx":"48","/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/constants/currencies.ts":"49","/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/constants/cards.ts":"50","/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/constants/whitelist.ts":"51","/Users/alexsharypin/Projects/alium/alium-public/src/state/user/actions.ts":"52","/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/components/Styled/Inputs.tsx":"53","/Users/alexsharypin/Projects/alium/alium-public/src/connectors/NetworkConnector.ts":"54","/Users/alexsharypin/Projects/alium/alium-public/src/connectors/Fortmatic.ts":"55","/Users/alexsharypin/Projects/alium/alium-public/src/connectors/bsc/bscConnector.ts":"56","/Users/alexsharypin/Projects/alium/alium-public/src/state/global/actions.ts":"57","/Users/alexsharypin/Projects/alium/alium-public/src/components/Loader/index.tsx":"58","/Users/alexsharypin/Projects/alium/alium-public/src/components/Column/index.tsx":"59","/Users/alexsharypin/Projects/alium/alium-public/src/components/Popups/TransactionPopup.tsx":"60","/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/components/NftCard/index.tsx":"61","/Users/alexsharypin/Projects/alium/alium-public/src/components/Popups/ListUpdatePopup.tsx":"62","/Users/alexsharypin/Projects/alium/alium-public/src/utils/listVersionLabel.ts":"63","/Users/alexsharypin/Projects/alium/alium-public/src/components/Shared/index.tsx":"64","/Users/alexsharypin/Projects/alium/alium-public/src/components/Row/index.tsx":"65","/Users/alexsharypin/Projects/alium/alium-public/src/components/Shared/Type.tsx":"66","/Users/alexsharypin/Projects/alium/alium-public/src/components/Shared/Common.tsx":"67","/Users/alexsharypin/Projects/alium/alium-public/src/pages/AppBody.tsx":"68","/Users/alexsharypin/Projects/alium/alium-public/src/pages/Pool/styleds.tsx":"69","/Users/alexsharypin/Projects/alium/alium-public/src/utils/parseENSAddress.ts":"70","/Users/alexsharypin/Projects/alium/alium-public/src/utils/contenthashToUri.ts":"71","/Users/alexsharypin/Projects/alium/alium-public/src/constants/lists.ts":"72","/Users/alexsharypin/Projects/alium/alium-public/src/state/transactions/reducer.ts":"73","/Users/alexsharypin/Projects/alium/alium-public/src/state/multicall/reducer.ts":"74","/Users/alexsharypin/Projects/alium/alium-public/src/state/lists/reducer.ts":"75","/Users/alexsharypin/Projects/alium/alium-public/src/state/application/reducer.ts":"76","/Users/alexsharypin/Projects/alium/alium-public/src/state/swap/reducer.ts":"77","/Users/alexsharypin/Projects/alium/alium-public/src/state/mint/reducer.ts":"78","/Users/alexsharypin/Projects/alium/alium-public/src/utils/theme.ts":"79","/Users/alexsharypin/Projects/alium/alium-public/src/state/burn/reducer.ts":"80","/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useApproveCallback.ts":"81","/Users/alexsharypin/Projects/alium/alium-public/src/state/lists/hooks.ts":"82","/Users/alexsharypin/Projects/alium/alium-public/src/state/wallet/hooks.ts":"83","/Users/alexsharypin/Projects/alium/alium-public/src/state/transactions/hooks.tsx":"84","/Users/alexsharypin/Projects/alium/alium-public/src/state/swap/actions.ts":"85","/Users/alexsharypin/Projects/alium/alium-public/src/state/mint/actions.ts":"86","/Users/alexsharypin/Projects/alium/alium-public/src/state/burn/actions.ts":"87","/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useToggledVersion.ts":"88","/Users/alexsharypin/Projects/alium/alium-public/src/utils/prices.ts":"89","/Users/alexsharypin/Projects/alium/alium-public/src/data/Allowances.ts":"90","/Users/alexsharypin/Projects/alium/alium-public/src/data/V1.ts":"91","/Users/alexsharypin/Projects/alium/alium-public/src/state/multicall/hooks.ts":"92","/Users/alexsharypin/Projects/alium/alium-public/src/hooks/Tokens.ts":"93","/Users/alexsharypin/Projects/alium/alium-public/src/components/ConnectWalletButton/index.tsx":"94","/Users/alexsharypin/Projects/alium/alium-public/src/components/TransactionConfirmationModal/index.tsx":"95","/Users/alexsharypin/Projects/alium/alium-public/src/components/Modal/index.tsx":"96","/Users/alexsharypin/Projects/alium/alium-public/src/components/Card/index.tsx":"97","/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useParsedQueryString.ts":"98","/Users/alexsharypin/Projects/alium/alium-public/src/state/user/hooks.tsx":"99","/Users/alexsharypin/Projects/alium/alium-public/src/components/TransactionConfirmationModal/ConfirmationPendingContent.tsx":"100","/Users/alexsharypin/Projects/alium/alium-public/src/components/TransactionConfirmationModal/TransactionErrorContent.tsx":"101","/Users/alexsharypin/Projects/alium/alium-public/src/components/TransactionConfirmationModal/ConfirmationModalContent.tsx":"102","/Users/alexsharypin/Projects/alium/alium-public/src/components/TransactionConfirmationModal/TransactionSubmittedContent.tsx":"103","/Users/alexsharypin/Projects/alium/alium-public/src/components/TransactionConfirmationModal/TransactionSucceedContent.tsx":"104","/Users/alexsharypin/Projects/alium/alium-public/src/components/TransactionConfirmationModal/TransactionConfirmationModal.tsx":"105","/Users/alexsharypin/Projects/alium/alium-public/src/components/TransactionConfirmationModal/helpers.tsx":"106","/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useEagerConnect.ts":"107","/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useAuth.ts":"108"},{"size":1004,"mtime":1621014196824,"results":"109","hashOfConfig":"110"},{"size":530,"mtime":1620992164587,"results":"111","hashOfConfig":"110"},{"size":268,"mtime":1620992164956,"results":"112","hashOfConfig":"110"},{"size":1895,"mtime":1620992164705,"results":"113","hashOfConfig":"110"},{"size":857,"mtime":1620992163156,"results":"114","hashOfConfig":"110"},{"size":3614,"mtime":1620992164920,"results":"115","hashOfConfig":"110"},{"size":6425,"mtime":1621014564599,"results":"116","hashOfConfig":"110"},{"size":3114,"mtime":1620992164941,"results":"117","hashOfConfig":"110"},{"size":7715,"mtime":1620992164922,"results":"118","hashOfConfig":"110"},{"size":873,"mtime":1620992164704,"results":"119","hashOfConfig":"110"},{"size":983,"mtime":1620992164706,"results":"120","hashOfConfig":"110"},{"size":711,"mtime":1620992164182,"results":"121","hashOfConfig":"110"},{"size":786,"mtime":1620992164184,"results":"122","hashOfConfig":"110"},{"size":1895,"mtime":1620992164183,"results":"123","hashOfConfig":"110"},{"size":642,"mtime":1620992164184,"results":"124","hashOfConfig":"110"},{"size":221,"mtime":1620992164957,"results":"125","hashOfConfig":"110"},{"size":696,"mtime":1620992164181,"results":"126","hashOfConfig":"110"},{"size":420,"mtime":1620992164182,"results":"127","hashOfConfig":"110"},{"size":956,"mtime":1620992164938,"results":"128","hashOfConfig":"110"},{"size":1876,"mtime":1620992164705,"results":"129","hashOfConfig":"110"},{"size":4252,"mtime":1620992164182,"results":"130","hashOfConfig":"110"},{"size":525,"mtime":1620992164956,"results":"131","hashOfConfig":"110"},{"size":1858,"mtime":1620992164959,"results":"132","hashOfConfig":"110"},{"size":1684,"mtime":1620992164921,"results":"133","hashOfConfig":"110"},{"size":1024,"mtime":1620992163156,"results":"134","hashOfConfig":"110"},{"size":1914,"mtime":1620992164179,"results":"135","hashOfConfig":"110"},{"size":1284,"mtime":1620992164706,"results":"136","hashOfConfig":"110"},{"size":3045,"mtime":1620992164182,"results":"137","hashOfConfig":"110"},{"size":7739,"mtime":1620992164179,"results":"138","hashOfConfig":"110"},{"size":1706,"mtime":1620992164959,"results":"139","hashOfConfig":"110"},{"size":2727,"mtime":1620992164957,"results":"140","hashOfConfig":"110"},{"size":157,"mtime":1620992163948,"results":"141","hashOfConfig":"110"},{"size":350,"mtime":1620992163871,"results":"142","hashOfConfig":"110"},{"size":2300,"mtime":1620992163599,"results":"143","hashOfConfig":"110"},{"size":3139,"mtime":1620992164646,"results":"144","hashOfConfig":"110"},{"size":17466,"mtime":1621014019413,"results":"145","hashOfConfig":"110"},{"size":1785,"mtime":1620992163527,"results":"146","hashOfConfig":"110"},{"size":4582,"mtime":1620992164942,"results":"147","hashOfConfig":"110"},{"size":773,"mtime":1620992164959,"results":"148","hashOfConfig":"110"},{"size":3778,"mtime":1620992164958,"results":"149","hashOfConfig":"110"},{"size":2066,"mtime":1621012743731,"results":"150","hashOfConfig":"110"},{"size":648,"mtime":1620992164180,"results":"151","hashOfConfig":"110"},{"size":356,"mtime":1620992164180,"results":"152","hashOfConfig":"110"},{"size":347,"mtime":1620992164153,"results":"153","hashOfConfig":"110"},{"size":152,"mtime":1620992164179,"results":"154","hashOfConfig":"110"},{"size":1794,"mtime":1620992164646,"results":"155","hashOfConfig":"110"},{"size":119,"mtime":1620992164647,"results":"156","hashOfConfig":"110"},{"size":2529,"mtime":1620992163527,"results":"157","hashOfConfig":"110"},{"size":2427,"mtime":1620992164647,"results":"158","hashOfConfig":"110"},{"size":1146,"mtime":1620992164647,"results":"159","hashOfConfig":"110"},{"size":3041,"mtime":1620992164647,"results":"160","hashOfConfig":"110"},{"size":1301,"mtime":1620992164941,"results":"161","hashOfConfig":"110"},{"size":1314,"mtime":1620992164646,"results":"162","hashOfConfig":"110"},{"size":5646,"mtime":1620992163608,"results":"163","hashOfConfig":"110"},{"size":1502,"mtime":1620992163608,"results":"164","hashOfConfig":"110"},{"size":6174,"mtime":1620992163608,"results":"165","hashOfConfig":"110"},{"size":287,"mtime":1620992164706,"results":"166","hashOfConfig":"110"},{"size":1093,"mtime":1620992163498,"results":"167","hashOfConfig":"110"},{"size":647,"mtime":1620992163460,"results":"168","hashOfConfig":"110"},{"size":1235,"mtime":1620992163527,"results":"169","hashOfConfig":"110"},{"size":3628,"mtime":1620992164646,"results":"170","hashOfConfig":"110"},{"size":3812,"mtime":1620992163527,"results":"171","hashOfConfig":"110"},{"size":182,"mtime":1620992164958,"results":"172","hashOfConfig":"110"},{"size":48,"mtime":1620992163535,"results":"173","hashOfConfig":"110"},{"size":997,"mtime":1620992163533,"results":"174","hashOfConfig":"110"},{"size":894,"mtime":1620992163535,"results":"175","hashOfConfig":"110"},{"size":3493,"mtime":1620992163535,"results":"176","hashOfConfig":"110"},{"size":555,"mtime":1620992164645,"results":"177","hashOfConfig":"110"},{"size":1223,"mtime":1620992164703,"results":"178","hashOfConfig":"110"},{"size":360,"mtime":1620992164958,"results":"179","hashOfConfig":"110"},{"size":1408,"mtime":1620992164957,"results":"180","hashOfConfig":"110"},{"size":232,"mtime":1620992164179,"results":"181","hashOfConfig":"110"},{"size":1994,"mtime":1620992164940,"results":"182","hashOfConfig":"110"},{"size":3956,"mtime":1620992164922,"results":"183","hashOfConfig":"110"},{"size":5332,"mtime":1620992164707,"results":"184","hashOfConfig":"110"},{"size":1735,"mtime":1620992164705,"results":"185","hashOfConfig":"110"},{"size":2459,"mtime":1620992164929,"results":"186","hashOfConfig":"110"},{"size":1229,"mtime":1620992164921,"results":"187","hashOfConfig":"110"},{"size":456,"mtime":1620992164959,"results":"188","hashOfConfig":"110"},{"size":529,"mtime":1620992164706,"results":"189","hashOfConfig":"110"},{"size":4324,"mtime":1620992164182,"results":"190","hashOfConfig":"110"},{"size":3671,"mtime":1620992164707,"results":"191","hashOfConfig":"110"},{"size":4715,"mtime":1621008108754,"results":"192","hashOfConfig":"110"},{"size":2904,"mtime":1620992164939,"results":"193","hashOfConfig":"110"},{"size":671,"mtime":1620992164922,"results":"194","hashOfConfig":"110"},{"size":322,"mtime":1620992164921,"results":"195","hashOfConfig":"110"},{"size":298,"mtime":1620992164705,"results":"196","hashOfConfig":"110"},{"size":394,"mtime":1620992164314,"results":"197","hashOfConfig":"110"},{"size":3202,"mtime":1620992164958,"results":"198","hashOfConfig":"110"},{"size":698,"mtime":1620992164181,"results":"199","hashOfConfig":"110"},{"size":6288,"mtime":1620992164181,"results":"200","hashOfConfig":"110"},{"size":7869,"mtime":1620992164921,"results":"201","hashOfConfig":"110"},{"size":4003,"mtime":1620992164181,"results":"202","hashOfConfig":"110"},{"size":615,"mtime":1621016796618,"results":"203","hashOfConfig":"110"},{"size":535,"mtime":1620992163598,"results":"204","hashOfConfig":"110"},{"size":3944,"mtime":1620992163521,"results":"205","hashOfConfig":"110"},{"size":1393,"mtime":1620992163438,"results":"206","hashOfConfig":"110"},{"size":359,"mtime":1620992164184,"results":"207","hashOfConfig":"110"},{"size":7816,"mtime":1620992164941,"results":"208","hashOfConfig":"110"},{"size":1336,"mtime":1620992163597,"results":"209","hashOfConfig":"110"},{"size":1254,"mtime":1620992163597,"results":"210","hashOfConfig":"110"},{"size":656,"mtime":1620992163578,"results":"211","hashOfConfig":"110"},{"size":1431,"mtime":1620992163598,"results":"212","hashOfConfig":"110"},{"size":5298,"mtime":1620992163598,"results":"213","hashOfConfig":"110"},{"size":1080,"mtime":1620992163597,"results":"214","hashOfConfig":"110"},{"size":1423,"mtime":1620992163598,"results":"215","hashOfConfig":"110"},{"size":1222,"mtime":1621016988479,"results":"216","hashOfConfig":"110"},{"size":486,"mtime":1621016798177,"results":"217","hashOfConfig":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},"9pdpk0",{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"220"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"292","usedDeprecatedRules":"220"},{"filePath":"293","messages":"294","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"295","messages":"296","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"327","messages":"328","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"339","messages":"340","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"341","messages":"342","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"347","messages":"348","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"349","messages":"350","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"410","messages":"411","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"359"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"420","messages":"421","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"422","messages":"423","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"426","messages":"427","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"428","messages":"429","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"430","messages":"431","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"220"},{"filePath":"434","messages":"435","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexsharypin/Projects/alium/alium-public/src/index.tsx",[],["438","439","440","441","442"],"/Users/alexsharypin/Projects/alium/alium-public/src/i18n.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/style/Global.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/application/updater.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/Providers.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/lists/updater.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/pages/App.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/transactions/updater.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/multicall/updater.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/application/actions.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/lists/actions.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useDebounce.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useIsWindowVisible.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useFetchListCallback.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useInterval.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/utils/getLibrary.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/hooks/LanguageContext.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/hooks/TranslationsContext.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/transactions/actions.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/application/hooks.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useContract.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/utils/chunkArray.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/utils/retry.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/multicall/actions.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/ThemeContext.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/constants/localisation/languageCodes.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/index.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/hooks/index.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/constants/index.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/utils/resolveENSContentHash.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/utils/getTokenList.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/constants/abis/migrator.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/constants/abis/erc20.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/Web3ReactManager/index.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/components/Header/index.tsx",["443"],"// import { Heading, Button, Flex, ConnectorId, useWalletModal } from '@alium-official/uikit'\nimport { Button, Flex, Heading, useWalletModal } from '@alium-official/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { injected, walletconnect } from 'connectors'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\nimport styled from 'styled-components'\nimport logoMobile from '../../images/logo-mobile.svg'\nimport logo from '../../images/logo.svg'\nimport icon from '../../images/plus-icon.svg'\nimport SocialNetworks from './SocialNetworks/SocialNetworks'\n\nconst Wrapper = styled.div`\n  padding: 30px;\n  border-bottom: 1px solid #d2d6e6;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n\n  & .logo--desktop {\n    display: block;\n  }\n  & .logo--mobile {\n    display: none;\n  }\n  @media screen and (max-width: 640px) {\n    padding: 15px 10px;\n\n    & .logo--desktop {\n      display: none;\n    }\n\n    & .logo--mobile {\n      display: block;\n    }\n\n    & .login-btn {\n      padding: 0 12px;\n    }\n  }\n`\n\nconst ImageWrap = styled.div`\n  margin-right: 20px;\n`\n\nconst StyledHeading = styled(Heading)`\n  &.heading--desktop {\n    margin: 0;\n    margin-left: 100px;\n    display: block;\n  }\n  @media screen and (max-width: 1240px) {\n    &.heading--desktop {\n      font-size: 30px;\n      margin-left: 30px;\n    }\n  }\n  @media screen and (max-width: 1024px) {\n    &.heading--desktop {\n      display: none;\n    }\n  }\n`\n\nconst Header = () => {\n  const { account, activate, deactivate } = useWeb3React()\n\n  const { t } = useTranslation()\n  const handleLogin = (connectorId: any) => {\n    if (connectorId === 'walletconnect') {\n      return activate(walletconnect)\n    }\n    return activate(injected)\n  }\n\n  const { onPresentConnectModal, onPresentAccountModal } = useWalletModal(\n    handleLogin,\n    deactivate,\n    account as string,\n    t('yourWallet'),\n    '',\n    t('copyAddress'),\n    t('logoutTitle'),\n    t('viewOnBscScan')\n  )\n\n  const accountEllipsis = account ? `${account.substring(0, 4)}...${account.substring(account.length - 4)}` : null\n\n  return (\n    <Wrapper>\n      <Flex style={{ width: '100%' }} justifyContent=\"space-between\">\n        <Flex style={{ width: '100%' }} alignItems=\"center\">\n          <img src={logo} alt=\"logo\" className=\"logo--desktop\" />\n          <img src={logoMobile} alt=\"logo\" className=\"logo--mobile\" />\n          {/* <StyledHeading as=\"h1\" size=\"xl\" color=\"heading\" mb=\"40px\" mt=\"20px\" className=\"heading--desktop\"> */}\n          {/*  {t('privateRound')} */}\n          {/* </StyledHeading> */}\n        </Flex>\n        <Flex justifyContent=\"space-between\">\n          <SocialNetworks />\n          {account ? (\n            <Button onClick={onPresentAccountModal} className=\"login-btn\">\n              {accountEllipsis}\n            </Button>\n          ) : (\n            <Button onClick={onPresentConnectModal} className=\"login-btn\">\n              <ImageWrap>\n                <img src={icon} alt=\"plus\" />\n              </ImageWrap>\n              {t('connect')}\n            </Button>\n          )}\n        </Flex>\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default Header\n","/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/index.tsx",["444","445","446","447","448"],"import { JSBI, TokenAmount } from '@alium-official/sdk'\nimport { Button, Flex, Heading, Text } from '@alium-official/uikit'\nimport { parseUnits } from '@ethersproject/units'\nimport {\n  FormControl,\n  FormHelperText,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Select,\n} from '@material-ui/core'\nimport axios from 'axios'\nimport { AutoColumn } from 'components/Column'\nimport ConnectWalletButton from 'components/ConnectWalletButton'\nimport Modal from 'components/Modal'\nimport { RowBetween } from 'components/Row'\nimport { TransactionSubmittedContent, TransactionSucceedContent } from 'components/TransactionConfirmationModal'\nimport { NFT_PRIVATE_ADDRESS } from 'constants/abis/nftPrivate'\nimport { useActiveWeb3React } from 'hooks'\nimport { ApprovalState, useApproveCallback } from 'hooks/useApproveCallback'\nimport { useCollectibleContract, useNFTPrivateContract } from 'hooks/useContract'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { useTranslation } from 'react-i18next'\nimport { useSelector } from 'react-redux'\nimport { useRemovePopup } from 'state/application/hooks'\nimport { PopupList } from 'state/application/reducer'\nimport { AppState } from 'state/index'\nimport { WrappedTokenInfo } from 'state/lists/hooks'\nimport { useTransactionAdder } from 'state/transactions/hooks'\nimport { useCurrencyBalance } from 'state/wallet/hooks'\nimport styled from 'styled-components'\nimport AppBody from '../AppBody'\nimport NftCard from './components/NftCard'\nimport { StyledFormControl, StyledTextField } from './components/Styled/Inputs'\nimport cardList from './constants/cards'\nimport currencies from './constants/currencies'\nimport emails from './constants/membersList'\nimport bgIMG from './images/background-img.svg'\nimport max from './images/max-button.svg'\n\nconst ContentHolder = styled.div`\n  position: relative;\n  & .content-background {\n    position: absolute;\n    right: 0;\n    top: -20px;\n  }\n\n  @media screen and (max-width: 480px) {\n    & .content-background {\n      right: 0;\n      top: 50px;\n    }\n  }\n`\n\nconst CardWrapper = styled.div`\n  width: 100%;\n  font-family: Roboto, sans-serif;\n  max-width: 1140px;\n  margin: 20px auto 0;\n  position: relative;\n`\nconst GridContainer = styled.div`\n  display: grid;\n  column-gap: 20px;\n\n  grid-template-columns: 1fr;\n  row-gap: 20px;\n\n  @media screen and (min-width: 769px) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media screen and (min-width: 1025px) {\n    grid-template-columns: repeat(5, 1fr);\n    row-gap: 0;\n  }\n`\n\nconst GridForm = styled.div`\n  margin: 30px auto 0;\n  display: grid;\n\n  max-width: 100%;\n\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr 1fr 1fr;\n  column-gap: 0;\n  row-gap: 20px;\n\n  @media screen and (min-width: 769px) {\n    grid-template-columns: 200px 2fr 2fr 1fr;\n    grid-template-rows: 1fr;\n    column-gap: 20px;\n  }\n  @media screen and (min-width: 1025px) {\n    max-width: 90%;\n    row-gap: 0;\n  }\n`\n\nconst StyledHeading = styled(Heading)`\n  @media screen and (max-width: 768px) {\n    text-align: center;\n  }\n  @media screen and (max-width: 480px) {\n    margin-bottom: 70px;\n  }\n`\n\nconst ButtonWrap = styled.div`\n  width: 100%;\n  max-width: initial;\n  & button {\n    width: 100%;\n    margin-top: 4px;\n  }\n  & div {\n    margin-top: 0;\n  }\n`\n\nconst AddressWrap = styled.div`\n  margin-top: 10px;\n  background: rgba(108, 93, 211, 0.1);\n  border: 1px solid #6c5dd3;\n  padding: 5px;\n  border-radius: 6px;\n  text-align: center;\n  font-size: 14px;\n  line-height: 20px;\n  letter-spacing: 0.3px;\n  color: #6c5dd3;\n`\n\nconst NotifyMembers = (hash, count, card, currency) => {\n  const explorer = 'https://bscscan.com/tx'\n  if (process.env.NODE_ENV !== 'development') {\n    emails.forEach((email) => {\n      const obj = {\n        to: email,\n        subject: 'New card purchase',\n        message: `Client bought ${count} cards of type ${card} for ${currency} \\n  ${explorer}/${hash}`,\n      }\n      axios.post('https://private.alium.finance/api/send-email/', obj).catch((err) => {\n        console.error(err)\n      })\n    })\n  }\n}\n\nconst Home = () => {\n  const [isOpenModal, setOpenModal] = useState(false)\n  const [isHideModalOpen, setHideModalOpen] = useState(false) // todo <Modal isOpen={false}\n  const { account, chainId } = useActiveWeb3React()\n\n  const { t } = useTranslation()\n\n  // useEffect(() => {\n  //   if (account) {\n  //     setHideModalOpen(false)\n  //     if (whitelist.indexOf(account) === -1) {\n  //       if (!isOpenModal) setOpenModal(true)\n  //     } else if (isOpenModal) setOpenModal(false)\n  //   } else if (!isHideModalOpen) setHideModalOpen(true)\n  // }, [account, isHideModalOpen, isOpenModal])\n\n  const nftContract = useNFTPrivateContract()\n  const collectibleContract = useCollectibleContract()\n\n  const [values, setValues] = useState<any>({\n    currency: currencies.stablecoins[0],\n    count: 1,\n  })\n\n  const inputLabel = React.useRef(null)\n  const [labelWidth, setLabelWidth] = useState<any>(0)\n  const [maxAmountOfCards, setMaxAmountOfCards] = useState<any>()\n  const [maxCardsAmounts, setMaxCardsAmount] = useState<number[]>([])\n  const [activeCard, setActiveCard] = useState<any>('0')\n\n  const updateMaxCardsAmount = useCallback(() => {\n    ;(async () => {\n      const maxAmounts = await Promise.all(\n        [1, 2, 3].map(async (item) => {\n          const result = await collectibleContract\n            ?.getTypeInfo(item)\n            .then((resp) => {\n              const amount = +resp.maxSupply - +resp.totalSupply\n              if ((item - 1).toString() === activeCard) {\n                setMaxAmountOfCards(amount)\n              }\n              return amount\n            })\n            .catch((err) => console.error(err))\n          return result\n        })\n      )\n      setMaxCardsAmount(maxAmounts)\n    })()\n  }, [activeCard, collectibleContract])\n\n  useEffect(() => {\n    updateMaxCardsAmount()\n  }, [updateMaxCardsAmount])\n\n  useEffect(() => {\n    const currentInput: any = inputLabel?.current\n    const width: any = currentInput?.offsetWidth\n    setLabelWidth(width)\n  }, [])\n\n  useEffect(() => {\n    setValues((oldValues) => ({\n      ...oldValues,\n      count: 1,\n    }))\n  }, [activeCard])\n\n  const handleChange = (event) => {\n    const { name } = event.target\n    let { value } = event.target\n\n    if (name === 'count' && (value.indexOf('-') !== -1 || !parseInt(value) || !/^[0-9]+$/.test(value)) && value !== '')\n      return\n\n    if (name === 'count') {\n      if (value > maxAmountOfCards) {\n        value = maxAmountOfCards\n      }\n    }\n\n    setValues((oldValues) => ({\n      ...oldValues,\n      [name]: value,\n    }))\n  }\n\n  const handleClickCard = (id: string) => {\n    setActiveCard(id)\n    setMaxAmountOfCards(maxCardsAmounts[id])\n  }\n\n  const handleClickMax = () => {\n    setValues((oldValues) => ({\n      ...oldValues,\n      count: maxAmountOfCards,\n    }))\n  }\n\n  const [txHash, setTxHash] = useState('xczxczxczxc')\n  const [tempTxHash, setTempTxHash] = useState('')\n  const [isTxOpen, setTxOpen] = useState(false)\n\n  const state = useSelector<AppState, AppState['transactions']>((s) => s.transactions)\n  const transactions: any = chainId ? state[chainId] ?? {} : {}\n\n  if (txHash !== '' && transactions[txHash]?.receipt) {\n    setTempTxHash(txHash)\n    setTxHash('')\n    setTxOpen(false)\n    updateMaxCardsAmount()\n  }\n\n  const addTransaction = useTransactionAdder()\n\n  const handleBuy = () => {\n    const totalAmount = `${values.count * cardList[activeCard]?.price}`\n    const args = [\n      currencies.match[values.currency]?.address,\n      +activeCard + 1,\n      parseUnits(totalAmount, currencies.match[values.currency]?.decimals),\n      values.count,\n    ]\n    nftContract?.estimateGas\n      .buyBatch(...args, { from: account })\n      .then((estimatedGasLimit) => {\n        nftContract\n          ?.buyBatch(...args, { gasLimit: estimatedGasLimit })\n          .then((resp) => {\n            NotifyMembers(resp.hash, values.count, +activeCard + 1, values.currency)\n            const selectedCard = cardList.filter((card) => card.id.toString() === activeCard)[0]\n            addTransaction(resp, {\n              summary: t('boughtCards', { count: values.count }),\n              additionalData: {\n                count: values.count,\n                card: selectedCard,\n              },\n            })\n\n            setTxHash(resp.hash)\n            setTxOpen(true)\n          })\n          .catch((err) => console.error(err))\n      })\n      .catch((err) => console.error(err))\n  }\n  const [approval, approveCallback] = useApproveCallback(\n    new TokenAmount(\n      new WrappedTokenInfo(currencies.match[values.currency], []),\n      JSBI.BigInt(\n        parseUnits(\n          values.count ? values?.count.toString() : '1',\n          currencies.match[values.currency]?.decimals\n        ).toString()\n      )\n    ),\n    NFT_PRIVATE_ADDRESS\n  )\n  const [approvalSubmitted, setApprovalSubmitted] = React.useState<boolean>(false)\n\n  useEffect(() => {\n    if (approval === ApprovalState.PENDING) {\n      setApprovalSubmitted(true)\n    }\n  }, [approval, approvalSubmitted])\n\n  const balance = useCurrencyBalance(account?.toString(), new WrappedTokenInfo(currencies.match[values.currency], []))\n\n  const sufficientBalance =\n    balance &&\n    parseInt(balance?.raw.toString()) >=\n      parseInt(\n        parseUnits(\n          (+cardList[activeCard]?.price * values.count).toString(),\n          currencies.match[values.currency]?.decimals\n        ).toString()\n      )\n\n  const isValidInputs = values.count && values.currency && sufficientBalance\n\n  const accountEllipsis = account ? `${account.substring(0, 8)}...${account.substring(account.length - 8)}` : null\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  const handleClose = () => {}\n\n  const handleTxClose = () => {\n    setTxOpen(false)\n  }\n\n  const removePopup = useRemovePopup()\n  const popupList = useSelector<AppState, PopupList>((s) => s.application.popupList)\n  const succeedHash = txHash || tempTxHash\n\n  let isSucceedPopupVisible = false\n  const filteredPopups = popupList.filter((popup) => popup.key === succeedHash)\n  if (filteredPopups.length && filteredPopups[0].show) {\n    isSucceedPopupVisible = true\n  }\n\n  const handleSucceedModalClose = () => {\n    removePopup(succeedHash)\n    setTempTxHash('')\n  }\n\n  return (\n    <ContentHolder>\n      <img className=\"content-background\" src={bgIMG} alt=\"background\" />\n      <CardWrapper>\n        <Modal isOpen={isOpenModal} onDismiss={handleClose}>\n          <Flex flexDirection=\"column\">\n            <Text\n              style={{\n                textAlign: 'center',\n                fontStyle: 'normal',\n                fontWeight: 'bold',\n                fontSize: '16px',\n                lineHeight: '22px',\n                letterSpacing: '0.3px',\n                color: '#0B1359',\n              }}\n            >\n              {t('sorryNotFound')}:\n            </Text>\n            <AddressWrap>{accountEllipsis}</AddressWrap>\n            <Text\n              mt=\"35px\"\n              style={{\n                textAlign: 'center',\n                fontStyle: 'normal',\n                fontWeight: 'normal',\n                fontSize: '14px',\n                lineHeight: '20px',\n                letterSpacing: '0.3px',\n                color: '#0B1359',\n              }}\n            >\n              {t('haveBeenRegistered')}.\n            </Text>\n            <Text\n              mt=\"15px\"\n              style={{\n                textAlign: 'center',\n                fontStyle: 'normal',\n                fontWeight: 'normal',\n                fontSize: '14px',\n                lineHeight: '20px',\n                letterSpacing: '0.3px',\n                color: '#0B1359',\n              }}\n            >\n              {t('didNotHelp')}\n            </Text>\n          </Flex>\n        </Modal>\n        <Modal isOpen={false} onDismiss={handleClose}>\n          <Flex flexDirection=\"column\" style={{ margin: '0 auto' }}>\n            <Text\n              mb=\"30px\"\n              style={{\n                textAlign: 'center',\n                fontWeight: 'bold',\n                fontSize: '16px',\n                lineHeight: '22px',\n                letterSpacing: '0.3px',\n                color: '#0B1359',\n              }}\n            >\n              {t('pleaseUnlockWallet')}\n            </Text>\n            <ConnectWalletButton fullwidth />\n          </Flex>\n        </Modal>\n        <Modal isOpen={isTxOpen} onDismiss={handleTxClose} maxHeight={90} padding=\"24px\">\n          <TransactionSubmittedContent chainId={chainId} hash={txHash} onDismiss={handleTxClose} />\n        </Modal>\n\n        <Modal isOpen={isSucceedPopupVisible} onDismiss={handleSucceedModalClose} maxHeight={90} padding=\"24px\">\n          <TransactionSucceedContent hash={succeedHash} onDismiss={handleSucceedModalClose} />\n        </Modal>\n\n        <StyledHeading as=\"h1\" size=\"xl\" color=\"heading\" mb=\"40px\" mt=\"20px\">\n          {t('privateRound')}\n        </StyledHeading>\n\n        <AppBody>\n          <GridContainer>\n            {cardList.map((card) => (\n              <NftCard\n                card={card}\n                handleClickCard={handleClickCard}\n                activeCard={activeCard}\n                maxCardsAmounts={maxCardsAmounts}\n              />\n            ))}\n          </GridContainer>\n          <GridForm>\n            <FormControl>\n              <StyledTextField\n                disabled={!maxAmountOfCards}\n                label={t('nftQuantity')}\n                type=\"text\"\n                name=\"count\"\n                value={values.count}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                InputProps={{\n                  inputProps: {\n                    pattern: '^[0-9]*[.,]?[0-9]*$',\n                    inputMode: 'decimal',\n                    placeholder: '1',\n                    spellCheck: false,\n                    minLength: 1,\n                    maxLength: 2,\n                    autoComplete: 'off',\n                  },\n                  endAdornment: (\n                    <InputAdornment position=\"end\" style={{ marginRight: '10px' }}>\n                      <IconButton onClick={handleClickMax} edge=\"end\" disabled={!maxAmountOfCards}>\n                        <img src={max} alt=\"icon\" />\n                      </IconButton>\n                    </InputAdornment>\n                  ),\n                }}\n                onChange={handleChange}\n                variant=\"outlined\"\n              />\n              {!!maxAmountOfCards && <FormHelperText>{t('maxAmount', { count: maxAmountOfCards })}</FormHelperText>}\n            </FormControl>\n            <StyledFormControl variant=\"outlined\">\n              <InputLabel shrink ref={inputLabel}>\n                {t('priceAndCurrency')}\n              </InputLabel>\n              <Select\n                value={values.currency}\n                onChange={handleChange}\n                name=\"currency\"\n                disabled={!maxAmountOfCards}\n                input={<OutlinedInput style={{ background: 'none' }} notched labelWidth={labelWidth} />}\n              >\n                {currencies.stablecoins.map((item) => (\n                  <MenuItem style={{ backgroundColor: 'transparent' }} value={item}>\n                    {(+cardList[activeCard]?.price * values.count).toLocaleString()} {item}\n                  </MenuItem>\n                ))}\n              </Select>\n              <FormHelperText>{t('chooseStablecoin')}</FormHelperText>\n            </StyledFormControl>\n            <ButtonWrap>\n              {!account ? (\n                <ConnectWalletButton fullwidth />\n              ) : (\n                <AutoColumn gap=\"md\">\n                  <RowBetween>\n                    <Button onClick={handleBuy}>Buy {values.count} cards</Button>\n                  </RowBetween>\n                </AutoColumn>\n              )}\n            </ButtonWrap>\n\n            {/* <ButtonWrap>\n              {!account ? (\n                <ConnectWalletButton fullwidth />\n              ) : (\n                <AutoColumn gap=\"md\">\n                  {isValidInputs && activeCard && values.count <= maxAmountOfCards ? (\n                    approval === ApprovalState.APPROVED ? (\n                      <RowBetween>\n                        <Button onClick={handleBuy}>{t('buyAmountCards', { count: values.count })}</Button>\n                      </RowBetween>\n                    ) : (\n                      <RowBetween>\n                        <Button onClick={approveCallback} disabled={approval === ApprovalState.PENDING}>\n                          {approval === ApprovalState.PENDING ? (\n                            <Dots>{t('approving', { count: values.currency })}</Dots>\n                          ) : (\n                            t('approve', { count: values.currency })\n                          )}\n                        </Button>\n                      </RowBetween>\n                    )\n                  ) : (\n                    <GreyCard style={{ textAlign: 'center' }}>\n                      {balance && !sufficientBalance\n                        ? t('insufficientBalance')\n                        : !values.count\n                        ? t('enterInputData')\n                        : t('pleaseWait')}\n                    </GreyCard>\n                  )}\n                </AutoColumn>\n              )}\n            </ButtonWrap> */}\n          </GridForm>\n        </AppBody>\n      </CardWrapper>\n    </ContentHolder>\n  )\n}\n\nexport default Home\n","/Users/alexsharypin/Projects/alium/alium-public/src/components/Popups/index.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/user/reducer.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/utils/uriToHttp.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/utils/index.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/connectors/index.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/constants/v1/index.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/constants/multicall/index.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/constants/abis/nftPrivate.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/constants/abis/vampire.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/components/Header/SocialNetworks/SocialNetworks.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/constants/membersList.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/Popups/PopupItem.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/constants/currencies.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/constants/cards.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/constants/whitelist.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/user/actions.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/components/Styled/Inputs.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/connectors/NetworkConnector.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/connectors/Fortmatic.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/connectors/bsc/bscConnector.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/global/actions.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/Loader/index.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/Column/index.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/Popups/TransactionPopup.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/pages/Home/components/NftCard/index.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/Popups/ListUpdatePopup.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/utils/listVersionLabel.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/Shared/index.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/Row/index.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/Shared/Type.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/Shared/Common.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/pages/AppBody.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/pages/Pool/styleds.tsx",[],["449","450","451","452","453"],"/Users/alexsharypin/Projects/alium/alium-public/src/utils/parseENSAddress.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/utils/contenthashToUri.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/constants/lists.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/transactions/reducer.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/multicall/reducer.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/lists/reducer.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/application/reducer.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/swap/reducer.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/mint/reducer.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/utils/theme.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/burn/reducer.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useApproveCallback.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/lists/hooks.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/wallet/hooks.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/transactions/hooks.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/swap/actions.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/mint/actions.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/burn/actions.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useToggledVersion.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/utils/prices.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/data/Allowances.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/data/V1.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/multicall/hooks.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/hooks/Tokens.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/ConnectWalletButton/index.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/TransactionConfirmationModal/index.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/Modal/index.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/Card/index.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useParsedQueryString.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/state/user/hooks.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/TransactionConfirmationModal/ConfirmationPendingContent.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/TransactionConfirmationModal/TransactionErrorContent.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/TransactionConfirmationModal/ConfirmationModalContent.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/TransactionConfirmationModal/TransactionSubmittedContent.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/TransactionConfirmationModal/TransactionSucceedContent.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/TransactionConfirmationModal/TransactionConfirmationModal.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/components/TransactionConfirmationModal/helpers.tsx",[],"/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useEagerConnect.ts",[],"/Users/alexsharypin/Projects/alium/alium-public/src/hooks/useAuth.ts",[],{"ruleId":"454","replacedBy":"455"},{"ruleId":"456","replacedBy":"457"},{"ruleId":"458","replacedBy":"459"},{"ruleId":"460","replacedBy":"461"},{"ruleId":"462","replacedBy":"463"},{"ruleId":"464","severity":1,"message":"465","line":47,"column":7,"nodeType":"466","messageId":"467","endLine":47,"endColumn":20},{"ruleId":"464","severity":1,"message":"468","line":155,"column":23,"nodeType":"466","messageId":"467","endLine":155,"endColumn":35},{"ruleId":"464","severity":1,"message":"469","line":156,"column":10,"nodeType":"466","messageId":"467","endLine":156,"endColumn":25},{"ruleId":"464","severity":1,"message":"470","line":156,"column":27,"nodeType":"466","messageId":"467","endLine":156,"endColumn":43},{"ruleId":"464","severity":1,"message":"471","line":300,"column":20,"nodeType":"466","messageId":"467","endLine":300,"endColumn":35},{"ruleId":"464","severity":1,"message":"472","line":332,"column":9,"nodeType":"466","messageId":"467","endLine":332,"endColumn":22},{"ruleId":"454","replacedBy":"473"},{"ruleId":"456","replacedBy":"474"},{"ruleId":"458","replacedBy":"475"},{"ruleId":"460","replacedBy":"476"},{"ruleId":"462","replacedBy":"477"},"lines-around-directive",["478"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'StyledHeading' is assigned a value but never used.","Identifier","unusedVar","'setOpenModal' is assigned a value but never used.","'isHideModalOpen' is assigned a value but never used.","'setHideModalOpen' is assigned a value but never used.","'approveCallback' is assigned a value but never used.","'isValidInputs' is assigned a value but never used.",["478"],[],[],[],[],"padding-line-between-statements"]